'use client'

import React, { Component, RefObject } from "react";
import { Core, ElementsDefinition } from "cytoscape";
import CytoscapeComponent from "react-cytoscapejs";

interface CytoscapeGraphProps {
  elements: ElementsDefinition;
}

interface CytoscapeGraphState {
  width: number;
  height: number;
  elements: ElementsDefinition;
}

const layout = {
    name: "random",
    fit: true,
    // circle: true,
    directed: true,
    padding: 50,
    // spacingFactor: 1.5,
    animate: false,
    animationDuration: 1000,
    avoidOverlap: true,
    nodeDimensionsIncludeLabels: false
  };
  const stylesheet = [
    {
      "selector": "node",
      "style": {
        "backgroundColor": "#4a56a6",
        "width": 30,
        "height": 30,
        "label": "data(name)",
        "overlay-padding": "6px",
        "z-index": "10",
        "text-outline-color": "#4a56a6",
        "text-outline-width": "2px",
        "color": "white",
        "fontSize": 20
      }
    },
    {
      "selector": "node:selected",
      "style": {
        "border-width": "6px",
        "border-color": "#AAD8FF",
        "border-opacity": "0.5",
        "background-color": "#77828C",
        "width": 50,
        "height": 50,
        "text-outline-color": "#77828C",
        "text-outline-width": 8
      }
    },
    {
      "selector": "edge",
      "style": {
        "width": "data(weight)",
        "line-color": "#AAD8FF",
      }
    },
    {
      "selector": "edge[directed='true']",
      "style": {
        "target-arrow-color": "#6774cb",
        "target-arrow-shape": "triangle",
        "curve-style": "bezier"
      }
    }
  ]

export class CytoscapeGraph extends Component<CytoscapeGraphProps, CytoscapeGraphState> {
  
    constructor(props: CytoscapeGraphProps) {
    super(props);

    this.state = {
      width: 0,
      height: 0,
      elements: [],
    };
  }

  componentDidMount(): void {
   
    this.setState({
      width: window.innerWidth,
      height: window.innerHeight,
      elements: this.props.elements,
    });

    this.setUpListeners();
    console.log(this.state.width, this.state.height)
  }

  setUpListeners(): void {
        this.cy.on("click", "node", (event) => {
        console.log(event.target);
      });
    }

  render() {
    return (
      <div>
        <CytoscapeComponent
          elements={CytoscapeComponent.normalizeElements(this.state.elements)}
          style={{ width: this.state.width, height: this.state.height }}
          cy={(cy) => {
            this.cy = cy;
          }}
          stylesheet={stylesheet}
          layout={layout}
        />
      </div>
    );
  }
}

export default function CytoscapeWindow({ data }: { data: JSON }) {
    const elements = CytoscapeComponent.normalizeElements(data["elements"]);
    console.log(elements)
    return (
        <div className="">
        <CytoscapeGraph elements={elements} />
        </div>
  );
}